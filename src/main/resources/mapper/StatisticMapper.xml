<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 * 통계 데이터 추출를 위한 Query Mapper 파일
 * (Mybatis Mapper xml)
 * @name_ko 통계 데이터 추출을 위한 Query Mapper
 * @author 이병관* 
      MyBatis에서 쿼리문을 작성할 때 '<', '>', '&'같은 특수문자를 사용하면 문자열이 아닌 XML 태그로 인식하여 오류가 발생합니다. 
      이런 경우 특수문자를 XML 태그가 아닌 문자열로 인식하게 하기 위해 CDATA(<![CDATA[...]]>)를 사용하거나 
      HTML 특수문자 코드를 사용합니다.
      CDATA(<![CDATA[...]]>) 주의할 점
      <![CDATA[...]]> 사용하는 경우 동적 쿼리문을 사용할 수 없기 때문에 쿼리문 
                      전체가 아닌 특수문자가 포함된 코드에만 <![CDATA[...]]> 사용해야 합니다.
      HTML 특수문자 코드 
      +===+======+
      | < | &lt; |
      | > | &gt; |
      | & | &amp;|
      +===+======+  
 -->
<!--
 namespace : com.mydata.domain.mybatis.IStatisticDAO
 id        : getTmSlotList
 name_ko   : 정보제공자 통계자료 중 시간대별 통계목록 조회
 --> 
<mapper namespace="com.mydata.domain.mybatis.IStatisticDAO">              
    <select id="getTmSlotList" parameterType="TmSlotListDTO" resultType="TmSlotList">
       <![CDATA[
        SELECT CASE WHEN REQUEST_HOUR < 6 OR REQUEST_HOUR > 18 THEN 0
               ELSE 1 
               END AS  tm_slot, 
               NVL(SUM(CASE WHEN RSP_CODE = '00000' OR RSP_CODE = '00001' THEN OCCURE_COUNT END),0) AS sucess_api_cnt,
               NVL(SUM(CASE WHEN RSP_CODE <> '00000' AND RSP_CODE <> '00001' THEN OCCURE_COUNT END),0) AS fail_api_cnt,
               NVL(SUM(DECODE(RSP_CODE, 'invalid_request', OCCURE_COUNT)),0) AS err_code_1_400_invalid_request,
               NVL(SUM(DECODE(RSP_CODE, 'method_not_allowed', OCCURE_COUNT)),0) AS err_code_1_405_method_not_allowed,
               NVL(SUM(DECODE(RSP_CODE, 'invalid_request', OCCURE_COUNT)),0) AS err_code_1_302_invalid_request,
               NVL(SUM(DECODE(RSP_CODE, 'unauthorized_client', OCCURE_COUNT)),0) AS err_code_1_302_unauthorized_client,
               NVL(SUM(DECODE(RSP_CODE, 'access_denied', OCCURE_COUNT)),0) AS err_code_1_302_access_denied,
               NVL(SUM(DECODE(RSP_CODE, 'unsupported_response_type', OCCURE_COUNT)),0) AS err_code_1_302_unsupported_response_type,
               NVL(SUM(DECODE(RSP_CODE, 'server_error', OCCURE_COUNT)),0) AS err_code_1_302_server_error,
               NVL(SUM(DECODE(RSP_CODE, 'temporarily_unavailable', OCCURE_COUNT)),0) AS err_code_1_302_temporarily_unavailable,
               NVL(SUM(DECODE(RSP_CODE, 'unauthorized_user', OCCURE_COUNT)),0) AS err_code_1_302_unauthorized_user,
               NVL(SUM(DECODE(RSP_CODE, 'invalid_request', OCCURE_COUNT)),0) AS err_code_2_400_invalid_request,
               NVL(SUM(DECODE(RSP_CODE, 'invalid_client', OCCURE_COUNT)),0) AS err_code_2_400_invalid_client,
               NVL(SUM(DECODE(RSP_CODE, 'invalid_grant', OCCURE_COUNT)),0) AS err_code_2_400_invalid_grant,
               NVL(SUM(DECODE(RSP_CODE, 'unauthorized_client', OCCURE_COUNT)),0) AS err_code_2_400_unauthorized_client,
               NVL(SUM(DECODE(RSP_CODE, 'unsupported_grant_type', OCCURE_COUNT)),0) AS err_code_2_400_unsupported_grant_type,
               NVL(SUM(DECODE(RSP_CODE, 'invalid_scope', OCCURE_COUNT)),0) AS err_code_2_400_invalid_scope,
               NVL(SUM(DECODE(RSP_CODE, 'unauthorized_user', OCCURE_COUNT)),0) AS err_code_2_400_unauthorized_user,
               NVL(SUM(DECODE(RSP_CODE, 'method_not_allowed', OCCURE_COUNT)),0) AS err_code_2_405_method_not_allowed,
               NVL(SUM(DECODE(RSP_CODE, 'server_error', OCCURE_COUNT)),0) AS err_code_2_500_server_error,
               NVL(SUM(DECODE(RSP_CODE, 'temporarily_unavailable', OCCURE_COUNT)),0) AS err_code_2_503_temporarily_unavailable,
               NVL(SUM(DECODE(RSP_CODE, '0', OCCURE_COUNT)),0) AS rsp_code_3_200_00000,
               NVL(SUM(DECODE(RSP_CODE, '1', OCCURE_COUNT)),0) AS rsp_code_3_200_00001,
               NVL(SUM(DECODE(RSP_CODE, '40001', OCCURE_COUNT)),0) AS rsp_code_3_400_40001,
               NVL(SUM(DECODE(RSP_CODE, '40002', OCCURE_COUNT)),0) AS rsp_code_3_400_40002,
               NVL(SUM(DECODE(RSP_CODE, '40003', OCCURE_COUNT)),0) AS rsp_code_3_400_40003,
               NVL(SUM(DECODE(RSP_CODE, '40004', OCCURE_COUNT)),0) AS rsp_code_3_400_40004,
               NVL(SUM(DECODE(RSP_CODE, '40101', OCCURE_COUNT)),0) AS rsp_code_3_401_40101,
               NVL(SUM(DECODE(RSP_CODE, '40102', OCCURE_COUNT)),0) AS rsp_code_3_401_40102,
               NVL(SUM(DECODE(RSP_CODE, '40103', OCCURE_COUNT)),0) AS rsp_code_3_401_40103,
               NVL(SUM(DECODE(RSP_CODE, '40104', OCCURE_COUNT)),0) AS rsp_code_3_401_40104,
               NVL(SUM(DECODE(RSP_CODE, '40105', OCCURE_COUNT)),0) AS rsp_code_3_401_40105,
               NVL(SUM(DECODE(RSP_CODE, '40106', OCCURE_COUNT)),0) AS rsp_code_3_401_40106,
               NVL(SUM(DECODE(RSP_CODE, '40301', OCCURE_COUNT)),0) AS rsp_code_3_403_40301,
               NVL(SUM(DECODE(RSP_CODE, '40302', OCCURE_COUNT)),0) AS rsp_code_3_403_40302,
               NVL(SUM(DECODE(RSP_CODE, '40303', OCCURE_COUNT)),0) AS rsp_code_3_403_40303,
               NVL(SUM(DECODE(RSP_CODE, '40304', OCCURE_COUNT)),0) AS rsp_code_3_403_40304,
               NVL(SUM(DECODE(RSP_CODE, '40305', OCCURE_COUNT)),0) AS rsp_code_3_403_40305,
               NVL(SUM(DECODE(RSP_CODE, '40401', OCCURE_COUNT)),0) AS rsp_code_3_404_40401,
               NVL(SUM(DECODE(RSP_CODE, '40402', OCCURE_COUNT)),0) AS rsp_code_3_404_40402,
               NVL(SUM(DECODE(RSP_CODE, '40403', OCCURE_COUNT)),0) AS rsp_code_3_404_40403,
               NVL(SUM(DECODE(RSP_CODE, '40501', OCCURE_COUNT)),0) AS rsp_code_3_405_40501,
               NVL(SUM(DECODE(RSP_CODE, '42901', OCCURE_COUNT)),0) AS rsp_code_3_429_42901,
               NVL(SUM(DECODE(RSP_CODE, '50001', OCCURE_COUNT)),0) AS rsp_code_3_500_50001,
               NVL(SUM(DECODE(RSP_CODE, '50002', OCCURE_COUNT)),0) AS rsp_code_3_500_50002,
               NVL(SUM(DECODE(RSP_CODE, '50003', OCCURE_COUNT)),0) AS rsp_code_3_500_50003,
               NVL(SUM(DECODE(RSP_CODE, '50004', OCCURE_COUNT)),0) AS rsp_code_3_500_50004,
               NVL(SUM(DECODE(RSP_CODE, '50005', OCCURE_COUNT)),0) AS rsp_code_3_500_50005,
               NVL(SUM(DECODE(RSP_CODE, '50006', OCCURE_COUNT)),0) AS rsp_code_3_500_50006,
               NVL(SUM(DECODE(RSP_CODE, '50007', OCCURE_COUNT)),0) AS rsp_code_3_500_50007,
               NVL(SUM(DECODE(RSP_CODE, '50008', OCCURE_COUNT)),0) AS rsp_code_3_500_50008,
               NVL(SUM(DECODE(RSP_CODE, '50009', OCCURE_COUNT)),0) AS rsp_code_3_500_50009,
               NVL(SUM(DECODE(RSP_CODE, '50010', OCCURE_COUNT)),0) AS rsp_code_3_500_50010
          FROM TB_MDCOS12
         WHERE REQUEST_DATE = #{requestDate}
           AND API_CODE = #{apiCode}
      GROUP BY CASE WHEN REQUEST_HOUR < 6 OR REQUEST_HOUR > 18 THEN 0 ELSE 1 END
    ]]>  
	</select>
</mapper>
